{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/prepararEventos.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js","helpers/fetch.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","auth","payload","calendar","map","e","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","prepararEventos","end","moment","toDate","start","eventAddNew","event","eventLoaded","eventUpdated","eventDeleted","eventClearActiveEvent","checkingFinish","login","user","startLogout","dispatch","localStorage","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","fetchSinToken","resp","json","body","ok","setItem","token","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","fetchConToken","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","getItem","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById","baseUrl","process","module","exports","endpoint","data","method","url","fetch","headers","JSON","stringify"],"mappings":"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","file":"static/js/main.a7f20a7f.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] event start add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Upated event',\r\n    eventDeleted: '[event] Deleted event',\r\n    eventLoaded: '[event] Loaded event',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    authChekingFinish: '[auth] Cheking finish login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token Renew',\r\n    authLogout: '[auth] Logout',\r\n    \r\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen:true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen:false\n            }\n    \n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\r\n\r\n/* \r\n    {\r\n        id: 'fasdfasdf',\r\n        title: 'Cumpleaños ivan',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        notes: 'Comprar el pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Ivan'\r\n    }\r\n}\r\n*/\r\n\r\nconst initialState = {\r\n\r\n    events:[], \r\n    activeEvent: null\r\n\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent:action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ \r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent:null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id === state.activeEvent.id ) ? action.payload : e\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    /* uid:null,\r\n    name:null */\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    \r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false\r\n            }\r\n\r\n        /* Renovar el token */\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            }\r\n\r\n        /* Cerrar Sesion */\r\n        case types.authLogout:\r\n            return{\r\n                checking:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    ui:uiReducer,\r\n    auth:authReducer,\r\n    calendar:calendarReducer\r\n    \r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n/* Activar redux en el navegador */\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store= createStore(\n    rootReducer, \n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import moment from \"moment\";\r\n\r\nexport const prepararEventos = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate()\r\n        })\r\n    ) ;\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepararEventos } from \"../helpers/prepararEventos\";\r\nimport { types } from \"../types/types\";\r\n\r\n/* Inicia la grabacion de un evento al calendario */\r\nexport const eventStartAddNew = ( event ) => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n    const {uid, name} = await getState().auth;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id:uid,\r\n                    name:name\r\n                }\r\n            }\r\n\r\n            dispatch( eventAddNew( event ) );\r\n\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/* Se diapara la grabacion del evento */\r\nconst eventAddNew = ( event ) => ({\r\n    type:types.eventAddNew,\r\n    payload:event\r\n});\r\n\r\n/* Inicia la carga todos los eventos de la base de datos para mostrarlos en el calendario */\r\nexport const eventStartLoading = () => {\r\n\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n\r\n            /* Ejecutamos el token */\r\n            const resp = await fetchConToken( 'events' );\r\n            /* Convertimos la respuesta en json */\r\n            const body = await resp.json();\r\n            /* Extraemos los eventos del body y preparamos los Strings a objetos de tipo Date */\r\n            const event = prepararEventos(body.eventos);\r\n\r\n            dispatch(eventLoaded(event));\r\n\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/* Dispara la carga de datos */\r\nconst eventLoaded = ( event ) => ({\r\n    type:types.eventLoaded,\r\n    payload:event\r\n});\r\n\r\n/* Inicia la actualizacion de algun evento */\r\nexport const eventStartUpdate = ( event ) => {\r\n    \r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            console.log('body', body)\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n/* Dispara la accion para actualizar el evento */\r\nconst eventUpdated = (event) => ({\r\n    type:types.eventUpdated,\r\n    payload:event\r\n});\r\n\r\n/* Iniciar borrado de evento */\r\nexport const eventStartDelete = () => {\r\n\r\n    return async(dispatch, getState) => {\r\n        \r\n        const id = getState().calendar.activeEvent.id;\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            console.log('body', body)\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log('error', error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n/* Dispara la accion para eliminar el evento */\r\nconst eventDeleted = () => ({\r\n    type:types.eventDeleted\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type:types.eventSetActive,\r\n    payload:event\r\n});\r\n\r\nexport const eventClearActiveEvent  = () => ({\r\n    type:types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type:types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n\r\n    return async(dispatch) => {\r\n        \r\n        /* Crear token al iniciar sesion */\r\n        const resp = await fetchSinToken( 'auth', {email, password}, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token);\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        /* Crear token al crear un usuario */\r\n        const resp = await fetchSinToken( 'auth/new', {name, email, password}, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token);\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem( 'token', body.token);\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }) );\r\n\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type:types.authChekingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type:types.authLogin,\r\n    payload:user\r\n});\r\n\r\nexport const startLogout  = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        /* Purgar informacion de los eventos */\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n};\r\n\r\nconst logout = () => ({\r\n    type:types.authLogout\r\n});","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState )\r\n    };\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n        \r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* Hook para manejo de formulario Login */\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        lEmail:'nando@gmail.com',\r\n        lPassword:'12345'\r\n    });\r\n\r\n    /* Desestructurar los valores para manejarlos mas sencillo en el formulario de Login */\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    /* Hook para manejo de formulario Registro */\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        rName:'Nando',\r\n        rEmail:'nando@gmail.com',\r\n        rPassword1:'12345',\r\n        rPassword2:'12345'\r\n    });\r\n\r\n    /* Desestructurar los valores para manejarlos mas sencillo en el formulario de Registro */\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n    /* Manejador del Login */\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        /* Despachar la accion para iniciar sesion */\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    /* Manejador del Registro */\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister(rName, rEmail, rPassword1) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin } >\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* Seleccionamos el nombre del usuario que viene en el state.auth\r\n        y lo ocuparemos para mostrarlo en el Navbar\r\n    */\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    /* Manejador para hacer logout */\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            \r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ( { event } ) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <span> { title } </span>\n            <strong>- { user.name } </strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\nexport const uiOpenModal = () => ({\n    type:types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n    type:types.uiCloseModal\n})","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n/* Se define el startDate con una hora mas y se ocupa en el DateTimePicker */\r\nconst now  = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1  = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    /* useSelector para estar pendiente de los cambios en el state de redux */\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n\r\n    /* Estado para validar el titulo */\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    /* Obtener la informacion del formulario del evento */\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    /* Desestructuracion del formvalues para obtener las notes, el title, inicio y fin */\r\n    const { notes, title, start, end  } = formValues;\r\n\r\n    /* Creamos el efecto para que este pendiente de los cambios del activeEvent */\r\n    /* Las dependencias [activeEvent, setFormValues] si alguna cambia se vuelve a ejecutar el evento */\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValues( activeEvent )\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]:target.value\r\n        });\r\n\r\n    }\r\n\r\n    /* Cerrar modal */\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start:e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end:e\r\n        })\r\n    }\r\n    \r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        /* Crear instancias de moment para trabajar con todas las comparaciones de fechas de esta libreria */\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha final debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        //TODO realizar grabacion en BD\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else{\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> { activeEvent ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange  }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange  }\r\n                        value={ dateEnd }\r\n                        minDate= { dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n    return (\n        <button \n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() )\r\n    }\r\n    \r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\n/* Se utiliza messajes para cambiar los mensajes del big calendar */\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n/* Se utiliza para cambiar el idioma del big calendar */\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // TODO leer del store, los eventos\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    /* Mantener el estado de una variable que cuando cambie, actualice los componentes */\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView' || 'month' ) );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() )\r\n    }, [dispatch])\r\n\r\n    /* Cuando se realice el doble click en una actividad del calendario se dispara esta funcion */\r\n    const onDoubleClick = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    /* Cuando se realice la seleccion de algun evento en el calendario */\r\n    const onSelect = ( e ) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    /* Cuando se cambia la vista del calendario entre Mes, Semana, Dia, Agenda */\r\n    const onViewChange = ( e ) => {\r\n        setLastView( e );\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    /* Esta funcion se va disparar con ciertos argumentos gracias al componente Calendar */\r\n    const eventStylerGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id ) ? '#367cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        /* Lo que regresa esta funcion es el estilo que le va aplicar al evento */\r\n        return {\r\n            style\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStylerGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelect }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                onView={ onViewChange }\r\n                view={ lastView || 'month' }\r\n\r\n                /* Components para personalizar el evento para el calendario */\r\n                components={{\r\n                    event : CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            { (activeEvent) && <DeleteEventFab /> }\r\n            \r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\nBrowserRouter as Router,\r\nSwitch,\r\nRedirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* Seleccionar del state el checking para validar si el usuario esta autenticado */\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    /* Al usar este Hook, le estamos indicando a React que el componente \r\n    tiene que hacer el dispatch de renovar el token después de renderizarse. */\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return(<h1>Espere</h1>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\n/* Se encarga de proveer la informacion a todos sus hijos */\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n/* Crear token */\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( url )\r\n\r\n    } else{\r\n\r\n        return fetch( \r\n            url, \r\n            {\r\n                method,\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                },\r\n                body:JSON.stringify( data )\r\n            }\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n/* Renovar el token  */\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n\r\n        return fetch( \r\n            url, \r\n            {\r\n                method,\r\n                headers:{\r\n                    'x-token':token\r\n                }\r\n            } \r\n        )\r\n\r\n    } else{\r\n\r\n        return fetch( \r\n            url, \r\n            {\r\n                method,\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    'x-token':token\r\n                },\r\n                body:JSON.stringify( data )\r\n            }\r\n        );\r\n        \r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}"],"sourceRoot":""}